{"abi":[{"type":"function","name":"createPool","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"fee","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getPool","inputs":[{"name":"tokenA","type":"address","internalType":"address"},{"name":"tokenB","type":"address","internalType":"address"},{"name":"fee","type":"uint24","internalType":"uint24"}],"outputs":[{"name":"pool","type":"address","internalType":"address"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","getPool(address,address,uint24)":"1698ee82"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MoonUpMarket/interfaces/IUniswapFactory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"src/MoonUpMarket/interfaces/IUniswapFactory.sol\":{\"keccak256\":\"0xac9a63b6a4817af383f85ee1e54d107cba18484207420d4d07477a2534c34486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964ec4e632693a8587e0fd8238f3c958616fabf4e003ab7dbe5799f4a67b3339\",\"dweb:/ipfs/QmXN5TCyiw85y6etJW1shUoigRk2wBpCRrthQFG3zHFS3X\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"nonpayable","type":"function","name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}]},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"stateMutability":"view","type":"function","name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}}},"version":1},"userdoc":{"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","v3-core/=lib/v3-core/","v3-periphery/=lib/v3-periphery/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/MoonUpMarket/interfaces/IUniswapFactory.sol":"IUniswapV3Factory"},"evmVersion":"paris","libraries":{}},"sources":{"src/MoonUpMarket/interfaces/IUniswapFactory.sol":{"keccak256":"0xac9a63b6a4817af383f85ee1e54d107cba18484207420d4d07477a2534c34486","urls":["bzz-raw://964ec4e632693a8587e0fd8238f3c958616fabf4e003ab7dbe5799f4a67b3339","dweb:/ipfs/QmXN5TCyiw85y6etJW1shUoigRk2wBpCRrthQFG3zHFS3X"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"src/MoonUpMarket/interfaces/IUniswapFactory.sol","id":42384,"exportedSymbols":{"IUniswapV3Factory":[42383]},"nodeType":"SourceUnit","src":"32:1516:47","nodes":[{"id":42357,"nodeType":"PragmaDirective","src":"32:23:47","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":42383,"nodeType":"ContractDefinition","src":"221:1327:47","nodes":[{"id":42370,"nodeType":"FunctionDefinition","src":"810:126:47","nodes":[],"documentation":{"id":42359,"nodeType":"StructuredDocumentation","src":"251:554:47","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","implemented":false,"kind":"function","modifiers":[],"name":"createPool","nameLocation":"819:10:47","parameters":{"id":42366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42361,"mutability":"mutable","name":"tokenA","nameLocation":"847:6:47","nodeType":"VariableDeclaration","scope":42370,"src":"839:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42360,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42363,"mutability":"mutable","name":"tokenB","nameLocation":"871:6:47","nodeType":"VariableDeclaration","scope":42370,"src":"863:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42362,"name":"address","nodeType":"ElementaryTypeName","src":"863:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42365,"mutability":"mutable","name":"fee","nameLocation":"894:3:47","nodeType":"VariableDeclaration","scope":42370,"src":"887:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":42364,"name":"uint24","nodeType":"ElementaryTypeName","src":"887:6:47","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"829:74:47"},"returnParameters":{"id":42369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42368,"mutability":"mutable","name":"pool","nameLocation":"930:4:47","nodeType":"VariableDeclaration","scope":42370,"src":"922:12:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42367,"name":"address","nodeType":"ElementaryTypeName","src":"922:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"921:14:47"},"scope":42383,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":42382,"nodeType":"FunctionDefinition","src":"1418:128:47","nodes":[],"documentation":{"id":42371,"nodeType":"StructuredDocumentation","src":"942:471:47","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"1427:7:47","parameters":{"id":42378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42373,"mutability":"mutable","name":"tokenA","nameLocation":"1452:6:47","nodeType":"VariableDeclaration","scope":42382,"src":"1444:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42372,"name":"address","nodeType":"ElementaryTypeName","src":"1444:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42375,"mutability":"mutable","name":"tokenB","nameLocation":"1476:6:47","nodeType":"VariableDeclaration","scope":42382,"src":"1468:14:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42374,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42377,"mutability":"mutable","name":"fee","nameLocation":"1499:3:47","nodeType":"VariableDeclaration","scope":42382,"src":"1492:10:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":42376,"name":"uint24","nodeType":"ElementaryTypeName","src":"1492:6:47","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"1434:74:47"},"returnParameters":{"id":42381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42380,"mutability":"mutable","name":"pool","nameLocation":"1540:4:47","nodeType":"VariableDeclaration","scope":42382,"src":"1532:12:47","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":42379,"name":"address","nodeType":"ElementaryTypeName","src":"1532:7:47","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1531:14:47"},"scope":42383,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3Factory","contractDependencies":[],"contractKind":"interface","documentation":{"id":42358,"nodeType":"StructuredDocumentation","src":"58:163:47","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"linearizedBaseContracts":[42383],"name":"IUniswapV3Factory","nameLocation":"231:17:47","scope":42384,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":47}